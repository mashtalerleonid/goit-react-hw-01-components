{"version":3,"sources":["components/UserProfile/StatsListItem/StatsListItem.styled.jsx","components/UserProfile/StatsListItem/StatsListItem.jsx","components/UserProfile/StatsList/StatsList.styled.jsx","components/UserProfile/StatsList/StatsList.jsx","components/UserProfile/Profile/Profile.styled.jsx","components/UserProfile/Profile/Profile.jsx","components/Statistics/StatisticsListItem/StatisticsListItem.styled.jsx","components/Statistics/StatisticsListItem/StatisticsListItem.jsx","components/Statistics/StatisticsList/StatisticsList.styled.jsx","components/Statistics/StatisticsList/StatisticsList.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/Friends/FriendListItem/FriendListItem.styled.jsx","components/Friends/FriendListItem/FriendListItem.jsx","components/Friends/FriendList/FriendList.styled.jsx","components/Friends/FriendList/FriendList.jsx","components/TransactionHistory/TransactionRow/TransactionRow.styled.jsx","components/TransactionHistory/TransactionRow/TransactionRow.jsx","components/TransactionHistory/TransactionTable/TransactionTable.styled.jsx","components/TransactionHistory/TransactionTable/TransactionTable.jsx","App.jsx","index.js"],"names":["Item","styled","li","Label","span","Quantity","StatListItem","label","quantity","Stats","ul","StatsList","stats","keys","Object","map","key","Card","div","Description","Avatar","img","Name","p","Tag","Profile","name","tag","location","avatar","src","alt","props","backgroundColor","StatisticsListItem","percentage","randomColor","arr","i","push","Math","floor","random","join","Statistics","section","StatList","StatisticsList","title","stat","id","Container","Section","children","Status","isOnline","FriendListItem","width","List","FriendList","friends","friend","Td","td","TdFirst","Tr","tr","TransactionRow","type","amount","currency","Table","table","Th","th","TransactionTable","items","item","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.596fbcac.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  padding: 15px 0;\n  width: calc(100% / 3);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  \n  :not(:last-child) {\n  border-right: 1px solid gray};\n}`;\n\nexport const Label = styled.span`\n  color: grey;\n`;\n\nexport const Quantity = styled.span`\n  font-weight: bold;\n`;\n","import PropTypes from 'prop-types';\nimport { Item, Label, Quantity } from './StatsListItem.styled';\n\nfunction StatListItem({ label, quantity }) {\n  return (\n    <Item>\n      <Label>{label}</Label>\n      <Quantity>{quantity}</Quantity>\n    </Item>\n  );\n}\n\nStatListItem.propTypes = {\n  label: PropTypes.string.isRequired,\n  quantity: PropTypes.number.isRequired,\n};\n\nexport default StatListItem;\n","import styled from '@emotion/styled';\n\nexport const Stats = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin-bottom: 0;\n  display: flex;\n  border-top: 1px solid gray;\n  background-color: rgb(240, 240, 240);\n`;\n","import StatListItem from 'components/UserProfile/StatsListItem';\nimport PropTypes from 'prop-types';\nimport { Stats } from './StatsList.styled';\n\nfunction StatsList({ stats }) {\n  const keys = Object.keys(stats);\n  return (\n    <Stats>\n      {keys.map(key => (\n        <StatListItem key={key} label={key} quantity={stats[key]} />\n      ))}\n    </Stats>\n  );\n}\n\nStatsList.propTypes = {\n  stats: PropTypes.objectOf(PropTypes.number),\n};\n\nexport default StatsList;\n","import styled from '@emotion/styled';\n\nexport const Card = styled.div`\n  width: 300px;\n  padding-top: 30px;\n  border-radius: 5px;\n  overflow: hidden;\n  box-shadow: 0px 7px 5px 4px rgba(2, 12, 19, 0.15);\n  background-color: white;\n`;\n\nexport const Description = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  color: grey;\n  font-size: 16px;\n`;\n\nexport const Avatar = styled.img`\n  width: 30%;\n  border-radius: 50%;\n  border: 2px solid black;\n`;\n\nexport const Name = styled.p`\n  font-size: 20px;\n  color: black;\n  font-weight: bold;\n  margin-bottom: 0;\n`;\n\nexport const Tag = styled.p`\n  margin-bottom: 0;\n`;\n","import StatsList from 'components/UserProfile/StatsList';\nimport PropTypes from 'prop-types';\nimport { Card, Description, Avatar, Name, Tag } from './Profile.styled';\n\nfunction Profile({ name, tag, location, avatar, stats }) {\n  return (\n    <Card>\n      <Description>\n        <Avatar src={avatar} alt=\"Аватар пользователя\"></Avatar>\n        <Name>{name}</Name>\n        <Tag>@{tag}</Tag>\n        <p>{location}</p>\n      </Description>\n\n      <StatsList stats={stats} />\n    </Card>\n  );\n}\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.objectOf(PropTypes.number),\n};\n\nexport default Profile;\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  width: 70px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 10px;\n  background-color: ${props => {\n    return props.backgroundColor;\n  }};\n`;\n\nexport const Label = styled.span`\n  margin-bottom: 10px;\n`;\n","import PropTypes from 'prop-types';\nimport { Item, Label } from './StatisticsListItem.styled';\n\nfunction StatisticsListItem({ label, percentage }) {\n  return (\n    <Item backgroundColor={randomColor()}>\n      <Label>{label}</Label>\n      <Label>{`${percentage}%`}</Label>\n    </Item>\n  );\n}\n\nStatisticsListItem.propTypes = {\n  label: PropTypes.string.isRequired,\n  percentage: PropTypes.number.isRequired,\n};\n\nexport default StatisticsListItem;\n\nfunction randomColor() {\n  let arr = [];\n  for (let i = 0; i < 3; i++) {\n    arr.push(Math.floor(Math.random() * 255));\n  }\n\n  return `rgb(${arr.join(',')})`;\n}\n","import styled from '@emotion/styled';\n\nexport const Statistics = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  box-shadow: 0px 7px 5px 4px rgba(2, 12, 19, 0.15);\n  background-color: white;\n`;\n\nexport const StatList = styled.section`\n  width: 100%;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  display: flex;\n`;\n","import StatisticsListItem from 'components/Statistics/StatisticsListItem';\nimport PropTypes from 'prop-types';\nimport { Statistics, StatList } from './StatisticsList.styled';\n\nfunction StatisticsList({ title, stats }) {\n  return (\n    <Statistics>\n      {title && <h2>{title}</h2>}\n\n      <StatList>\n        {stats.map(stat => (\n          <StatisticsListItem\n            key={stat.id}\n            label={stat.label}\n            percentage={stat.percentage}\n          />\n        ))}\n      </StatList>\n    </Statistics>\n  );\n}\n\nStatisticsList.propTypes = {\n  title: PropTypes.string.isRequired,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default StatisticsList;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  margin-top: 30px;\n  padding: 30px 0;\n  display: flex;\n  justify-content: center;\n  background-color: rgb(220, 219, 235);\n`;\n","import PropTypes from 'prop-types';\nimport { Container } from './Section.styled';\n\nfunction Section({ children }) {\n  return <Container>{children}</Container>;\n}\n\nSection.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  width: 200px;\n  height: 50px;\n  margin-bottom: 15px;\n  padding: 10px;\n  font-size: 30px;\n  box-shadow: 0px 2px 5px 3px rgba(34, 60, 80, 0.4);\n  background-color: white;\n`;\n\nexport const Status = styled.span`\n  display: block;\n  margin-right: 10px;\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n\n  background-color: ${props => (props.isOnline ? 'green' : 'red')};\n`;\n\nexport const Avatar = styled.img`\n  margin-right: 15px;\n  border: 1px solid black;\n  border-radius: 5px;\n`;\n","import PropTypes from 'prop-types';\nimport { Item, Status, Avatar } from './FriendListItem.styled';\n\nfunction FriendListItem({ avatar, name, isOnline }) {\n  return (\n    <Item>\n      <Status isOnline={isOnline}></Status>\n      <Avatar src={avatar} alt=\"\" width=\"48\"></Avatar>\n      <p>{name}</p>\n    </Item>\n  );\n}\n\nFriendListItem.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n};\n\nexport default FriendListItem;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  padding: 0;\n`;\n","import FriendListItem from 'components/Friends/FriendListItem';\nimport PropTypes from 'prop-types';\nimport { List } from './FriendList.styled';\n\nfunction FriendList({ friends }) {\n  return (\n    <List>\n      {friends.map(friend => (\n        <FriendListItem\n          avatar={friend.avatar}\n          name={friend.name}\n          isOnline={friend.isOnline}\n          key={friend.id}\n        />\n      ))}\n    </List>\n  );\n}\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport default FriendList;\n","import styled from '@emotion/styled';\n\nexport const Td = styled.td`\n  width: calc(100% / 3);\n  padding: 10px 0;\n  border: 1px solid rgb(160, 160, 160);\n`;\n\nexport const TdFirst = styled.td`\n  width: calc(100% / 3);\n  padding: 10px 0;\n  border: 1px solid rgb(160, 160, 160);\n  padding-left: 70px;\n  text-align: left;\n`;\n\nexport const Tr = styled.tr`\n :nth-of-type(even) {\n  background-color: rgba(215, 230, 230, 0.925);\n`;\n","import PropTypes from 'prop-types';\nimport { Tr, Td, TdFirst } from './TransactionRow.styled';\n\nfunction TransactionRow({ type, amount, currency }) {\n  return (\n    <Tr>\n      <TdFirst>{type}</TdFirst>\n      <Td>{amount}</Td>\n      <Td>{currency}</Td>\n    </Tr>\n  );\n}\n\nTransactionRow.propTypes = {\n  type: PropTypes.string.isRequired,\n  amount: PropTypes.string.isRequired,\n  currency: PropTypes.string.isRequired,\n};\n\nexport default TransactionRow;\n","import styled from '@emotion/styled';\n\nexport const Table = styled.table`\n  width: 600px;\n  background-color: white;\n  text-align: center;\n  border-collapse: collapse;\n`;\n\nexport const Th = styled.th`\n  padding: 10px;\n  color: white;\n  background-color: rgb(5, 192, 199);\n  border: 1px solid rgb(160, 160, 160);\n`;\n","import PropTypes from 'prop-types';\nimport TransactionRow from 'components/TransactionHistory/TransactionRow';\nimport { Table, Th } from './TransactionTable.styled';\n\nfunction TransactionTable({ items }) {\n  return (\n    <Table>\n      <thead>\n        <tr>\n          <Th>Type</Th>\n          <Th>Amount</Th>\n          <Th>Currency</Th>\n        </tr>\n      </thead>\n      <tbody>\n        {items.map(item => (\n          <TransactionRow\n            type={item.type}\n            amount={item.amount}\n            currency={item.currency}\n            key={item.id}\n          />\n        ))}\n      </tbody>\n    </Table>\n  );\n}\n\nTransactionTable.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default TransactionTable;\n","import user from './data/user.json';\nimport statisticalData from './data/statistical-data.json';\nimport friends from './data/friends.json';\nimport transactions from './data/transaction.json';\nimport Profile from 'components/UserProfile/Profile';\nimport StatisticsList from 'components/Statistics/StatisticsList';\nimport Section from 'components/Section';\nimport FriendList from 'components/Friends/FriendList';\nimport TransactionTable from 'components/TransactionHistory/TransactionTable';\n\nfunction App() {\n  return (\n    <div>\n      <Section>\n        <Profile\n          name={user.name}\n          tag={user.tag}\n          location={user.location}\n          avatar={user.avatar}\n          stats={user.stats}\n        />\n      </Section>\n      <Section>\n        <StatisticsList title=\"Upload stats\" stats={statisticalData} />\n      </Section>\n      <Section>\n        <FriendList friends={friends} />\n      </Section>\n      <Section>\n        <TransactionTable items={transactions} />\n      </Section>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}